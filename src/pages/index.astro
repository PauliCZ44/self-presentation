---
import Layout from '../layouts/Layout.astro'
import PavelOnCard from '../components/PavelOnCard.astro'
import AtroposWrapper from '../components/AtroposWrapper.astro'
import 'atropos/css'
import '../global.css'
import SkillCard from '../components/SkillCard.astro'
import Projects from '../components/Projects.astro'
import NeonText from '../components/NeonText.astro'
import ArrowButton from '../components/ArrowButton.astro'
---

<Layout title="Hello">
	<link rel="preconnect" href="https://fonts.googleapis.com" />
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
	<link
		href="https://fonts.googleapis.com/css2?family=Rubik:wght@400;500;700&family=Source+Code+Pro:wght@400;500;700&display=swap"
		rel="stylesheet"
	/>
	<script async src="https://cdn.jsdelivr.net/npm/lax.js"></script>
	<script src="../scripts/swirl.js"></script>
	<script src="../scripts/canvasCursor.js"></script>
	<div class="relative w-full h-full min-h-[600px] sm:min-h-[1000px]" id="home">
		<div class="content--canvas"></div>
		<!-- // at small we want to have 60% of 1000 = 600 -->
		<div class="absolute w-full h-full top-0 left-0 flex items-center justify-center">
			<div class="xl:scale-105 2xl:scale-110">
				<div
					class="transition-transform ease-linear duration-[50ms] rounded-md"
					style={{ transform: 'translateY(calc(var(--scrollY) * -0.33px)' }}
				>
					<AtroposWrapper shadowColor="#00000055">
						<PavelOnCard />
					</AtroposWrapper>
				</div>
			</div>
		</div>

		<!-- // Absoulute positinoed and center on the page -->
		<div class="arrow-container-wrapper">
			<button class="arrow-container" id="scroll-to-about" aria-label="scroll to about section">
				<ArrowButton />
			</button>
		</div>
	</div>

	<div class="pt-10 bg-transparent overflow-hidden" id="about">
		<NeonText />
	</div>

	<div class="w-full min-h-full relative" id="skills">
		<div class="bg-cursor"></div>
		<div class="grid-wrapper-boxes leading-none">
			<SkillCard
				id={1}
				title={'React Enthusiast'}
				description={"I'm passionate Front-end developer, mainly focused on developing React applications."}
			/>

			<SkillCard
				id={2}
				title={'Quality oriented'}
				description={'My main goal is to create a great user experience and make make the apps accessible, efficient, and user-friendly.'}
			/>

			<SkillCard
				id={3}
				title={'Professional'}
				description={'I write clean, readable, and maintainable code that adheres to the best industry standards.'}
			/>

			<SkillCard
				id={4}
				title={'Continuous learner'}
				description={'I am constantly learning and staying up-to-date with the latest technologies and trends to ensure that my work is always up to date.'}
			/>
		</div>
	</div>

	<Projects />
</Layout>

<script>
	import Atropos from 'atropos'

	function doOnScroll(e: Event) {
		document.body.style.setProperty('--scrollY', `${e?.target?.scrollTop}`)
	}
	function handleScroll(e: Event) {
		// use requestAnimationFrame to throttle scroll callbacks
		window.requestAnimationFrame(() => doOnScroll(e))
	}
	document.body.addEventListener('scroll', function (e) {
		handleScroll(e)
	})

	document.addEventListener('DOMContentLoaded', function () {
		document.body.style.setProperty('--scrollY', '0')
		document.body.style.setProperty('--windowHeight', `${window.innerHeight}`)
		document.body.style.setProperty('--windowWidth', `${window.innerWidth}`)
	})

	window.addEventListener('resize', function (e) {
		console.log('resize')
		document.body.style.setProperty('--windowHeight', `${window.innerHeight}`)
		document.body.style.setProperty('--innerWidth', `${window.innerWidth}`)
	})

	// selecet scroll-to-about button
	const scrollToAboutButton = document.getElementById('scroll-to-about')
	scrollToAboutButton?.addEventListener('click', function () {
		const aboutSection = document.getElementById('about')
		aboutSection?.scrollIntoView({ behavior: 'smooth' })
	})

	const cardCount = 4
	for (let i = 0; i <= cardCount; i++) {
		Atropos({
			el: `.atropos-initializer-${i}`,
			activeOffset: 10,
			shadowScale: 1.05,
			rotateXMax: 10,
			rotateYMax: 10,
			rotateTouch: 'scroll-y',
		})
	}
</script>

<style is:global>
	html,
	body,
	.content--canvas {
		overflow-x: hidden;
		overflow-y: auto;
		margin: 0;
		width: 100%;
		height: 100%;
		background-color: black;
	}

	.atropos:hover .screen-image {
		transform: translateY(0px) scale(1.05);
		filter: sepia(40%) contrast(130%) brightness(95%) grayscale(20%);
	}

	.arrow-container-wrapper {
		transform: translateY(calc(var(--scrollY) * -0.15px + 2px));
		transition: transform 50ms linear;
	}

	.arrow-container {
		transition: transform 350ms ease-in-out;
		z-index: 3;
		padding-top: 5px;
		opacity: 0.8;
		position: absolute;
		bottom: 1rem;
		left: 50%;
		transform: translateX(-50%);
		width: 56px;
		height: 56px;
		display: flex;
		align-content: center;
		justify-content: center;
		flex-wrap: wrap;
		border: 1px solid rgba(255, 255, 255);
		border-radius: 50%;
	}

	.arrow-container:hover,
	.arrow-container:focus-visible {
		opacity: 1;
		transform: scale(1.04) translateX(-50%) translateY(-2px);
	}

	/* // random like movement */
	@keyframes pan-overlay {
		0% {
			background-position: 50% 50%;
		}

		20% {
			background-position: 75% 60%;
		}

		40% {
			background-position: 100% 80%;
		}

		60% {
			background-position: 75% 70%;
		}

		80% {
			background-position: 64% 62%;
		}

		100% {
			background-position: 50% 50%;
		}
	}

	.grid-wrapper-boxes {
		padding-block: 5rem;
		display: grid;
		height: 100%;
		width: 100%;
		/* max-width: min(90vw, 68rem); */
		min-height: 100vh;
		grid-template-columns: minmax(21rem, 35rem) minmax(21rem, 35rem);
		gap: calc(var(--fs-md) * 1.5);
		justify-content: center;
		align-content: center;
		/* grid-template-columns: repeat(auto-fit, minmax(25vw, 28rem)); */
		/* grid-auto-rows: minmax(25vh, 20rem); */
	}

	@media (max-width: 768px) {
		.grid-wrapper-boxes {
			grid-template-columns: minmax(21rem, 35rem);
		}
	}
</style>
