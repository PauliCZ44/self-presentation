---
// props of title

export interface Props {
  title: string;
  id?: string;
  size?: string
}

const { title, id, size = "fs-xl sm:fs-xxxl" } = Astro.props;
---
<div class="relative z-10" id={id}>
  <h3 class={size}>
    <span class="scale-text">
      {title}
    </span>
  </h3>
</div>
  
<style>
  
  .scale-text {
    --t: 0;
    /* Create View Timeline */
    view-timeline-name: --scale-text;
    view-timeline-axis: block;

    /* Attach animation, linked to the  View Timeline */
    animation: linear scaleText both;
    animation-timeline: --scale-text;

    /* Tweak range when effect should run*/
    animation-range: entry 5% cover 60%;
    display: inline-block;
    transform-origin: 50% 50%;
    color: inherit;
  }
  h3 {
    color: hsla(var(--baseHue), 75%, 85%, 1);
    --lineCol: hsla(var(--baseHue), 50%, 50%, 0.2);
    --lineH: 1px;
    text-align: center;
    font-weight: 800  ;
    padding: 0.5em;
    text-shadow: 0 0 30px var(--primary), 0 0 10px var(--primary), 0 0 20px var(--primary);
    background-size: 30px 30px;
    background-color: hsl(var(--primaryHue), 66%, 4%);
    background-image: linear-gradient(0deg, transparent calc(50% - var(--lineH)), var(--lineCol) 50%, transparent calc(50% + var(--lineH))), linear-gradient(90deg, transparent calc(50% - var(--lineH)), var(--lineCol) 50%, transparent calc(50% + var(--lineH)));
    transition: all 200ms ease-in-out;
  } 

  h3:hover {
    color: hsla(var(--baseHue), 75%, 88%, 1);
    --lineCol: hsla(var(--baseHue), 50%, 50%, 0.26);
    text-shadow: 0 0 70px var(--primary),0 0 30px var(--primary),0 0 50px var(--primary), 0 0 15px var(--primary), 0 0 5px var(--primary)
  }
  
  @keyframes scaleText {
    from {
      opacity: 0.75;
      transform: translateY(-10px) scale(0.85);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

</style>
